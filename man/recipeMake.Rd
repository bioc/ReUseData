% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recipeMake.R
\name{recipeMake}
\alias{recipeMake}
\title{recipeMake}
\usage{
recipeMake(
  shscript = "",
  paramID = c(),
  paramType = c(),
  outputID = c(),
  outputGlob = character(0),
  requireTools = character(0)
)
}
\arguments{
\item{shscript}{character string. Can take either the file path to
the user provided shell script, or directly the script content,
that are to be converted into a data recipe.}

\item{paramID}{the ID for each parameter to pass in.}

\item{paramType}{Character string specifying the type for each
\code{paramID}. Valid values are "int" for integer, "boolean" for
boolean, "float" for numeric, "File" for file path, "File[]"
for an array of files, etc. Can also take "double", "long",
"null", "Directory". Find more details:
"https://www.commonwl.org/v1.2/CommandLineTool.html#CWLType".}

\item{outputID}{the ID for each output.}

\item{outputGlob}{the glob pattern of output files. E.g., "hg19.*".}

\item{requireTools}{the command-line tools to be used for data
processing/curation in the user-provided shell script. The
value here must exactly match the tool name. E.g., "bwa",
"samtools", etc. A particular version of that tool can be
specified in the format of "tool=version", e.g.,
"samtools=1.3".}
}
\value{
a data recipe in \code{cwlProcess} S4 class with all details
about the shell script for data processing/curation, inputs,
outputs, required tools and corresponding docker files. It is
readily taken by \code{getData()} to evaluate the shell scripts
included and generate the data locally. Find more details with
\code{?Rcwl::cwlProcess}.
}
\description{
Function to make a data recipe
}
\details{
This function is a convenient function for wrapping a
shell script into a data recipe (in \code{cwlProcess} S4
class). Please use \code{Rcwl::cwlProcess} for more options and
functionalities.
}
\examples{
ref_genome <- recipeMake(shscript = "", paramID = c("fasta"), paramType=c("string"), )


}
